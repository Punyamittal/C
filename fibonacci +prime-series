/*Problem Statement



You have been given a series that follows a specific pattern. The odd-indexed terms, i.e. the 1st, 3rd, 5th, and so on, form a Fibonacci sequence. The even-indexed terms, i.e. the 2nd, 4th, 6th, and so on, are prime numbers arranged in ascending order. The series begins with the numbers 1, 2, 1, 3, 2, 5, 3, 7, 5, 11, 8, 13, 17, and so on.



Your task is to write a program that can find the nth term in this series. The program should use control flow statements to alternately generate Fibonacci and prime numbers, depending on whether the term's index is odd or even.

Input format :
The input consists of an integer n.

Output format :
The output prints an integer representing the nth term of the given series.



Refer to the sample output for format specifications.

Code constraints :
In the given scenario, the test cases fall under the following constraints:

1 ≤ n ≤ 100*/
#include<stdio.h>
#include<math.h>
int is_prime(int m){
    if(m<2)return 0;
    for (int i=2;i*i<=m;i++){
        if (m%i==0)
        return 0;
    }
    return 1;
}
int prime(int n){
    int c=0;
    int m=1;
    while (c<n){
        m++;
        if (is_prime(m)){
            c++;
        }
    }
    return m;
}
int fibo(int n){
    if(n<=1)
    return n;
    int m[n];
    m[0]=1;
    m[1]=1;
    for(int i=2;i<n;i++){
        m[i]=m[i-1]+m[i-2];
    }
    return m[n-1];
}
int main(){
    int n;
    scanf("%d",&n);
    if(n%2==0){
        if(n<=0){
            printf(0);
        }
        else {
            n=(n)/2;
            printf("%d",prime(n));
        }
    }
    else{
        n=(n+1)/2;
        printf("%d",fibo(n));
    }
}
